.\" Automatically generated by Pod::Man 4.07 (Pod::Simple 3.32)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L"
.    ds R"
.    ds C`
.    ds C'
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L"
.    ds R"
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "maxtime 1"
.TH maxtime 1 "2019-03-22" " " " "
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.B maxtime
\- run a command with a timeout
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\f(CW\*(C`maxtime [\-g] [\-k] [\-v] [\-w] [\-\-] \*(C'\fR\fItime\fR\f(CW\*(C` \*(C'\fR\fIcommand\fR\f(CW\*(C` [\*(C'\fR\fIarg1\fR\f(CW\*(C` ...]\*(C'\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBmaxtime\fR allows for an external program to be run with a time limit.
The argument \fItime\fR must be a positive number of seconds, and may be
fractional. If the \fIcommand\fR terminates within this period, \fBmaxtime\fR
reports its exit status. If the command's real (wall clock)
time exceeds
the time limit, it will be killed with \s-1SIGTERM. \s0\fBmaxtime\fR will then return
the value 106 to indicate the timeout (see below under \s-1RETURN VALUE\s0).
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-g\fR" 4
.IX Item "-g"
The specified \fIcommand\fR will run in its own process group. If the command
times out, the entire process group will be killed.
.IP "\fB\-k\fR" 4
.IX Item "-k"
If \s-1SIGTERM\s0 does not kill \fIcommand\fR, send \s-1SIGKILL\s0 after a short delay.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Be verbose. If not specified, \fBmaxtime\fR will not report what it is doing,
even if it exits due to an error. However, the exit code will indicate
the problem.
.IP "\fB\-w\fR" 4
.IX Item "-w"
Wait for termination of the child process, even if it timed out and was
sent a \s-1SIGTERM\s0 and/or \s-1SIGKILL.\s0
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1PATH\s0" 4
.IX Item "PATH"
\&\fB\s-1PATH\s0\fR is traversed in order to find the specified \fIcommand\fR.
.SH "RETURN VALUE"
.IX Header "RETURN VALUE"
\&\fBmaxtime\fR returns the exit status of the external command, unless an
error condition occurs, in which case the exit code will be greater than 100.
.IP "0" 4
The command completed successfully.
.IP "1 to 100" 4
.IX Item "1 to 100"
The command was unsuccessful. The exit status is the exit status
of the external command.
.IP "101" 4
.IX Item "101"
Too few commandline arguments.
.IP "102" 4
.IX Item "102"
Invalid command line options.
.IP "103" 4
.IX Item "103"
Error while setting the alarm signal handler.
.IP "104" 4
.IX Item "104"
Error while forking child process.
.IP "105" 4
.IX Item "105"
Error during \fIexec()\fR. Probably the command specified is not in the \fB\s-1PATH\s0\fR.
.IP "106" 4
.IX Item "106"
Either the \fIcommand\fR timed out and was killed, or some other process sent
it a signal, causing it to terminate. The command did not return a useful
exit status.
.IP "107" 4
.IX Item "107"
Insufficient memory to perform requested task.
.IP "108" 4
.IX Item "108"
The \fItime\fR specified was not a valid floating-point number.
.IP "109" 4
.IX Item "109"
The specified timer period was negative or zero.
.IP "110" 4
.IX Item "110"
The timer could not be set.
.IP "128 and up" 4
.IX Item "128 and up"
The command was unsuccessful, and exited due to a signal (e.g. an interrupt
was sent from the keyboard).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Attempt to download a network file, but allow at most 10 seconds:
.PP
.Vb 1
\&    maxtime 10 wget http://catb.org/jargon/html/index.html
.Ve
.PP
Request the status of a Baan shared memory segment, but do not lock up if
shared memory is corrupt:
.PP
.Vb 1
\&    maxtime 2 $BSE/bin/shmmanager6.1 \-s
.Ve
.PP
Allow at most 10 minutes for stopping a Baan software environment:
.PP
.Vb 1
\&    maxtime 600 $BSE/etc/rc.stop
.Ve
.SH "BUGS"
.IX Header "BUGS"
If the \fItime\fR argument is omitted and an \fIarg\fR argument is provided,
\&\fBmaxtime\fR might interpret its commandline arguments wrong. This will only
be apparent if \fB\-v\fR has been used, or if its exit status is tested for
value 105.
.PP
On some platforms, \fBmaxtime\fR might confuse options for the external
command as options for itself.  In these cases is necessary to indicate
the end of \fBmaxtime\fR's options using \f(CW\*(C`\-\-\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIexit\fR\|(3), \fIsetitimer\fR\|(2), \fIsignal\fR\|(7), \fIwait\fR\|(2).
.SH "VERSION"
.IX Header "VERSION"
This manual pertains to version 0.36.
.SH "AUTHOR and COPYRIGHT"
.IX Header "AUTHOR and COPYRIGHT"
.\" the \(co macro only exists in groff
.ie \n(.g .ds co \(co
.el       .ds co (c)
.ie \n(.g .ds e' \('e
.el       .ds e' e\*'
.ie n Copyright (c) 2004-2019,
.el   Copyright \*(co 2004-2019,
Ren\*(e' Uittenbogaard (ruittenb@users.sourceforge.net).
.PP \
This program is free software; you can redistribute it and/or modify it
under the terms described by the \s-1GNU\s0 General Public License version 2.
.PP
\&\f(CW\*(C`maxtime\*(C'\fR is distributed without any warranty, even without the
implied warranties of merchantability or fitness for a particular purpose.
